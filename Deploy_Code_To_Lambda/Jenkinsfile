pipeline{
    agent any
    environment{
        AWS_REGION = "us-east-1"
        S3_BUCKET = "pgrlambdafunction"
        LAMBDA_FUNCTION_NAME = "root_login_detection"
    }
    stages{
        stage('Git CheckOut'){
            steps{
                 git branch: 'main', credentialsId: 'GitLab-credentials', url: 'http://192.168.1.120/root/root_login_detect.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                // Install dependencies (if using Python)
                sh"""
                touch requirements.txt
                pip install -r requirements.txt -t .
                """
            }
        }
        stage('Zip Code') {
            steps {
                // Create a deployment package
                sh 'zip -r deployment-package.zip *'
            }
        }

        stage('Upload to S3'){
            steps{
                withVault([vaultSecrets: [[path:'secret/data/awscredsadmin', secretValues:[
                    [envVar: 'AWS_ACCESS_KEY_ID', vaultKey: 'aws_access_key_id'],
                    [envVar: 'AWS_SECRET_ACCESS_KEY', vaultKey: 'aws_secret_access_key']
                ]]]]){  
                        sh """
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

                        aws s3 cp deployment-package.zip s3://${S3_BUCKET}/${LAMBDA_FUNCTION_NAME}/deployment-package.zip --region $AWS_REGION

                        """
                    
                }

            }
        }
        stage('Update Lambda') {
            steps {
               withVault([vaultSecrets: [[path:'secret/data/awscredsadmin', secretValues:[
                    [envVar: 'AWS_ACCESS_KEY_ID', vaultKey: 'aws_access_key_id'],
                    [envVar: 'AWS_SECRET_ACCESS_KEY', vaultKey: 'aws_secret_access_key']
                ]]]]){
                    sh """
                    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                    aws lambda update-function-code \
                        --function-name ${LAMBDA_FUNCTION_NAME} \
                        --s3-bucket ${S3_BUCKET} \
                        --s3-key ${LAMBDA_FUNCTION_NAME}/deployment-package.zip
                    """
                }
            }
        }
    }
    post {
        always{
            cleanWs()
        }
    }
}